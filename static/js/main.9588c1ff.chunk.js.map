{"version":3,"sources":["components/organisms/header/Logo.svg","styles/global.tsx","components/templates/main-theme/index.jsx","styles/breakpoints.ts","components/atoms/container/index.jsx","styles/colors.ts","components/organisms/header/index.jsx","components/atoms/input/index.jsx","components/atoms/button/index.jsx","components/atoms/switch/index.jsx","models/itemCardapio/index.js","components/molecule/form/index.jsx","components/molecule/tabs/index.jsx","components/atoms/tab/index.jsx","components/molecule/Item-lista/index.jsx","components/organisms/body/index.jsx","components/pages/app/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","props","theme","fontSize","MainTheme","children","Fragment","className","breakpoints","sm","md","lg","Container","component","tag","Tag","link","rel","target","href","submit","onSubmit","id","styled","marginZero","percent","flex","fw","mbPercent","tbPercent","tbHide","colors","black","red","burgundy","default","white","yellow","ContainerHeader","Header","src","Logo","alt","Input","type","onChange","placeholder","value","required","rows","row","ImgSelect","htmlFor","file","style","backgroundImage","label","accept","Button","onClick","colorSecundary","SwitchContainer","div","CheckBoxWrapper","CheckBoxLabel","CheckBox","input","Switch","opt1","opt2","ItemCardapio","titulo","sabor","valor","desc","img","this","_titulo","_sabor","_valor","_desc","_img","Object","freeze","ContainerForm","Form","name","useState","checked","state","setState","opt","setOpt","url","setFile","setTitulo","setSabor","setValor","setDesc","limpaFormulario","adicionaItem","item","setComidaData","comidaData","concat","setBebidaData","bebidaData","e","preventDefault","console","log","length","Swal","fire","title","text","icon","confirmButtonText","test","event","defaultValue","files","URL","createObjectURL","ContainerTabs","Tabs","activeIndex","defaultActiveIndex","map","i","classActive","key","Tab","ItemLista","imgUrl","ContainerTitle","Body","index","slice","reverse","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9588c1ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.05c93ffb.svg\";","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        font-family: 'Roboto', sans-serif;\n        box-sizing: border-box;\n    }\n\n    input {\n        :focus {\n            outline: none;\n        }\n    }\n\n    img {\n        max-width: 100%;\n    }\n    body{\n        background: url(/images/pattern.png);\n    }\n    html, body, #root {\n        height: 100%\n    }\n    .backgroundGradient{\n        width: 100%;\n    height: 100%;\n    position: fixed;\n    left: 50%;\n    top: 0;\n    z-index: -2;\n    background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 15%, rgba(255,255,255,1) 50%, rgba(255,255,255,1) 85%, rgba(255,255,255,0) 100%);\n    transform: translate(-50%);\n    }\n    ul,li,ol{\n        list-style:none;\n        padding-left: 0;\n    }\n`;\n\nexport const AccessibilityStyle = createGlobalStyle<{\n  theme: { fontSize: number };\n}>`\n    html {\n        font-size: ${(props) => props.theme.fontSize}px;\n    }\n\n    img {\n        max-width: 100%;\n    }\n    svg {\n        display: inline-block;\n        font-size: inherit;\n        height: 1em;\n        overflow: visible;\n        vertical-align: -0.125em;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport GlobalStyles from \"../../../styles/global\";\nimport { Normalize } from \"styled-normalize\";\n\nfunction MainTheme({ children }) {\n  return (\n    <React.Fragment>\n      <Normalize />\n      <GlobalStyles />\n      <div className=\"backgroundGradient\"></div>\n      {children}\n    </React.Fragment>\n  );\n}\n\nexport default MainTheme;\n","const breakpoints = {\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"1070px\",\n};\n\nexport default breakpoints;\n","import React from \"react\";\nimport breakpoints from \"../../../styles/breakpoints\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst percent = (props) => (props.percent ? (props) => props.percent : 100);\nconst tbPercent = (props) =>\n  props.tbPercent ? (props) => props.tbPercent : 100;\nconst mbPercent = (props) =>\n  props.mbPercent ? (props) => props.mbPercent : 100;\nconst display = (props) => (props.flex ? \"flex\" : \"block\");\nconst FW = (props) => (props.fw ? \"wrap\" : \"unset\");\nconst tbDisplay = (props) => (props.tbHide ? \"none\" : \"block\");\nconst margin = (props) => (props.marginZero ? \"0\" : \"0 auto\");\n\nlet Container = (props) => {\n  let component;\n\n  if (props.tag && props.tag !== \"a\" && props.tag !== \"form\") {\n    const Tag = props.tag;\n    component = <Tag className={props.className}>{props.children}</Tag>;\n  } else if (props.tag === \"a\") {\n    const Tag = props.tag;\n    const link = props.link;\n    const rel = props.rel;\n    const target = props.target;\n    component = (\n      <Tag className={props.className} rel={rel} href={link} target={target}>\n        {props.children}\n      </Tag>\n    );\n  } else if (props.tag === \"form\") {\n    const Tag = props.tag;\n    const rel = props.rel;\n    const submit = props.onSubmit;\n    component = (\n      <Tag\n        id={props.id}\n        className={props.className}\n        rel={rel}\n        onSubmit={submit}\n      >\n        {props.children}\n      </Tag>\n    );\n  } else {\n    component = <div className={props.className}>{props.children}</div>;\n  }\n  return component;\n};\n\nContainer = styled(Container)`\n  margin: ${margin};\n  width: ${percent}%;\n  display: ${display};\n  flex-wrap: ${FW};\n  max-width: 1920px;\n  @media (max-width: ${breakpoints.sm}) {\n    max-width: ${breakpoints.sm};\n    width: ${mbPercent}%;\n  }\n  @media (max-width: ${breakpoints.md}) {\n    max-width: ${breakpoints.md};\n  }\n  @media (max-width: ${breakpoints.lg}) {\n    max-width: ${breakpoints.lg};\n    width: ${tbPercent}%;\n    display: ${tbDisplay};\n  }\n`;\n\nContainer.propTypes = {\n  percent: PropTypes.string,\n  tbPercent: PropTypes.string,\n  mbPercent: PropTypes.string,\n  flex: PropTypes.bool,\n  fw: PropTypes.bool,\n  tbHide: PropTypes.string,\n  marginZero: PropTypes.string,\n  className: PropTypes.string,\n  colorSecundary: PropTypes.bool,\n  children: PropTypes.node,\n  tag: PropTypes.elementType,\n  link: PropTypes.string,\n  target: PropTypes.string,\n  rel: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default Container;\n","const colors = {\n  black: \"#000000\",\n  red: \"#E43636\",\n  burgundy: {\n    default: \"#A03400\",\n    \"45\": \"#740B0B45\",\n    \"4d\": \"#E335354D\",\n  },\n  white: \"#ffffff\",\n  yellow: \"#FFCA00\",\n};\n\nexport default colors;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"../../atoms/container\";\nimport Logo from \"./Logo.svg\";\nimport colors from \"../../../styles/colors\";\n\nlet Header = () => {\n  return (\n    <ContainerHeader tag=\"header\">\n      <Container percent=\"80\">\n        <img src={Logo} alt=\"logo Pastel de ideias\" className=\"logo\" />\n      </Container>\n    </ContainerHeader>\n  );\n};\n\nlet ContainerHeader = styled(Container)`\n  position: relative;\n  background: ${colors.red};\n  z-index: -2;\n  &:after {\n    content: \"\";\n    width: 100%;\n    background-image: url(/images/wave.svg);\n    position: absolute;\n    min-height: 250px;\n    background-repeat: no-repeat;\n    bottom: -249px;\n    z-index: -1;\n  }\n  .logo {\n    position: relative;\n    max-width: 500px;\n    margin: 0 auto 30px;\n    display: block;\n    width: 90%;\n  }\n`;\n\nexport default Header;\n","import React from \"react\";\nimport colors from \"../../../styles/colors\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nlet Input = (props) => {\n  let component;\n\n  if (props.type === \"textArea\") {\n    component = (\n      <textarea\n        className={props.className}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        value={props.value}\n        type={props.type}\n        required={props.required}\n        rows={props.row}\n      >\n        {props.children}\n      </textarea>\n    );\n  } else if (props.type === \"file\") {\n    component = (\n      <React.Fragment>\n        <ImgSelect htmlFor=\"selectImg\">\n          {props.file ? (\n            <React.Fragment>\n              <div\n                className=\"imgPreview\"\n                style={{ backgroundImage: `url(${props.file})` }}\n              ></div>\n              Esse é um preview da sua imagem\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <img\n                className=\"icon\"\n                src=\"/images/upload-image.png\"\n                alt=\"Icone de subir arquivos\"\n              />\n              {props.label}\n            </React.Fragment>\n          )}\n        </ImgSelect>\n        <input\n          className={props.className}\n          type={props.type}\n          required={props.required}\n          onChange={props.onChange}\n          id=\"selectImg\"\n          accept={props.accept}\n        >\n          {props.children}\n        </input>\n      </React.Fragment>\n    );\n  } else {\n    component = (\n      <input\n        className={props.className}\n        label={props.label}\n        onChange={props.onChange}\n        placeholder={props.placeholder}\n        value={props.value}\n        type={props.type}\n        required={props.required}\n      >\n        {props.children}\n      </input>\n    );\n  }\n  return component;\n};\n\nInput = styled(Input)`\n  width: calc(100% - 30px);\n  background: ${colors.white};\n  border: 1px solid ${colors.red};\n  border-radius: 10px;\n  padding: 0.5rem;\n  font-weight: 500;\n  margin: 10px 15px;\n  resize: none;\n  font-size: 0.9rem;\n  color: ${colors.burgundy.default};\n  &[type=\"text\"],\n  &::placeholder,\n  &[type=\"number\"] {\n    color: ${colors.burgundy.default};\n  }\n  &[type=\"file\"] {\n    display: none;\n  }\n`;\n\nconst ImgSelect = styled.label`\n  width: calc(100% - 30px);\n  background: ${colors.white};\n  border: 1px solid ${colors.red};\n  color: ${colors.burgundy.default};\n  border-radius: 10px;\n  padding: 1rem 0.5rem;\n  font-weight: 500;\n  margin: 10px 15px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  .icon {\n    margin-bottom: 1rem;\n    width: 30px;\n    height: auto;\n  }\n  .imgPreview {\n    width: 90px;\n    height: 90px;\n    box-shadow: 0px 0px 30px #740b0b45;\n    border-radius: 10px;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n  }\n`;\n\nInput.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  children: PropTypes.node,\n  row: PropTypes.string,\n  file: PropTypes.string,\n  accept: PropTypes.string,\n};\n\nexport default Input;\n","import React from \"react\";\nimport colors from \"../../../styles/colors\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst background = (props) =>\n  props.colorSecundary ? (props) => colors.red : colors.yellow;\nconst color = (props) =>\n  props.colorSecundary ? (props) => colors.white : colors.burgundy.default;\n\nlet Button = (props) => {\n  return (\n    <button className={props.className} onClick={props.onClick}>\n      <span>{props.children}</span>\n    </button>\n  );\n};\n\nButton = styled(Button)`\n  border-radius: 30px;\n  background: ${background};\n  color: ${color};\n  cursor: pointer;\n  width: 150px;\n  padding: 1rem;\n  font-size: 1rem;\n  max-height: 60px;\n  font-weight: 900;\n  border: none;\n  text-transform: uppercase;\n`;\n\nButton.propTypes = {\n  className: PropTypes.string,\n  colorSecundary: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../../../styles/colors\";\nimport PropTypes from \"prop-types\";\n\nlet Switch = (props) => {\n  return (\n    <SwitchContainer>\n      <span className=\"opt opt1\">{props.opt1}</span>\n      <CheckBoxWrapper>\n        <CheckBox\n          onChange={props.onChange}\n          id=\"checkbox\"\n          type=\"checkbox\"\n          value={props.value}\n        />\n        <CheckBoxLabel htmlFor=\"checkbox\" />\n      </CheckBoxWrapper>\n      <span className=\"opt opt2\">{props.opt2}</span>\n    </SwitchContainer>\n  );\n};\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-content: center;\n  .opt {\n    font-weight: 500;\n    color: ${colors.burgundy.default};\n  }\n  .opt1 {\n    margin-right: 5px;\n  }\n  .opt2 {\n    margin-left: 5px;\n  }\n`;\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n`;\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  width: 42px;\n  height: 10px;\n  border-radius: 15px;\n  background: ${colors.white};\n  transform: translateY(-50%);\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    margin: -4px 0;\n    background: ${colors.red};\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n    transition: 0.2s;\n  }\n`;\nconst CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 42px;\n  height: 10px;\n  &:checked + ${CheckBoxLabel} {\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin-left: 24px;\n      transition: 0.2s;\n    }\n  }\n`;\n\nSwitch.propTypes = {\n  opt1: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  opt2: PropTypes.string,\n};\n\nexport default Switch;\n","export default class ItemCardapio {\n  constructor(titulo, sabor, valor, desc, img) {\n    this._titulo = titulo;\n    this._sabor = sabor;\n    this._valor = valor;\n    this._desc = desc;\n    this._img = img;\n    Object.freeze(this);\n  }\n\n  get titulo() {\n    return this._titulo;\n  }\n\n  get sabor() {\n    return this._sabor;\n  }\n\n  get desc() {\n    return this._desc;\n  }\n\n  get img() {\n    return this._img;\n  }\n}\n","import React, { useState } from \"react\";\nimport Input from \"../../atoms/input\";\nimport Button from \"../../atoms/button\";\nimport Switch from \"../../atoms/switch\";\nimport styled from \"styled-components\";\nimport Container from \"../../atoms/container\";\nimport colors from \"../../../styles/colors\";\nimport ItemCardapio from \"../../../models/itemCardapio\";\nimport Swal from \"sweetalert2\";\nimport PropTypes from \"prop-types\";\nimport breakpoints from \"../../../styles/breakpoints\";\n\nlet Form = (props) => {\n  const opt1 = \"Comida\",\n    opt2 = \"Bebida\",\n    [state, setState] = useState({\n      checked: false,\n    }),\n    [opt, setOpt] = useState(opt1),\n    [file, setFile] = useState({\n      url: null,\n      name: null,\n    }),\n    [titulo, setTitulo] = useState(\"\"),\n    [sabor, setSabor] = useState(\"\"),\n    [valor, setValor] = useState(\"\"),\n    [desc, setDesc] = useState(\"\"),\n    handleChangeCheck = (name) => (event) => {\n      setState({ [name]: event.target.checked });\n      if (!state.checked) {\n        setOpt(opt2);\n      } else {\n        setOpt(opt1);\n      }\n      console.log(opt);\n    },\n    handleChangeImg = () => (event) => {\n      event.target.files[0]\n        ? setFile({\n            name: event.target.files[0].name,\n            url: URL.createObjectURL(event.target.files[0]),\n          })\n        : setFile({\n            name: null,\n            url: null,\n          });\n    },\n    limpaFormulario = () => {\n      setFile({\n        name: null,\n        url: null,\n      });\n      setTitulo(\"\");\n      setSabor(\"\");\n      setValor(\"\");\n      setDesc(\"\");\n    },\n    adicionaItem = (opt, titulo, sabor, valor, desc, file) => {\n      const item = new ItemCardapio(titulo, sabor, valor, desc, file);\n      opt === opt1\n        ? props.setComidaData(props.comidaData.concat(item))\n        : props.setBebidaData(props.bebidaData.concat(item));\n    },\n    ValidaEadicionaItem = (e) => {\n      e.preventDefault();\n      console.log(opt);\n\n      if (titulo.length < 3 || titulo.length > 60) {\n        Swal.fire({\n          title: \"Algo de errado não está certo!\",\n          text: \"Seu título tem menos que 3 ou mais que 60 caracteres\",\n          icon: \"error\",\n          confirmButtonText: \"Vou Corrigir!\",\n        });\n        return false;\n      }\n      if (sabor.length < 3 || sabor.length > 60) {\n        Swal.fire({\n          title: \"Algo de errado não está certo!\",\n          text: \"Seu sabor tem menos que 3 ou mais que 60 caracteres\",\n          icon: \"error\",\n          confirmButtonText: \"Vou Corrigir!\",\n        });\n        return false;\n      }\n      if (file.url !== null && !/\\.(jpe?g|png)$/i.test(file.name)) {\n        Swal.fire({\n          title: \"Algo de errado não está certo!\",\n          text:\n            \"Parece que você tentou subir com uma extensão diferente de '.jpg' ou '.png'\",\n          icon: \"error\",\n          confirmButtonText: \"Vou Corrigir!\",\n        });\n        return false;\n      }\n      if (file.url === null) {\n        const defaultFile =\n          opt === opt1\n            ? {\n                url: \"/images/default_comida.png\",\n                name: \"defaultImg-Comida\",\n              }\n            : {\n                url: \"/images/default_bebidas.png\",\n                name: \"defaultImg-Bebida\",\n              };\n        adicionaItem(opt, titulo, sabor, valor, desc, defaultFile);\n      } else {\n        adicionaItem(opt, titulo, sabor, valor, desc, file);\n      }\n      limpaFormulario();\n      console.log(opt);\n    };\n  return (\n    <ContainerForm tag=\"form\" percent=\"75\" onSubmit={ValidaEadicionaItem}>\n      <div className=\"headerForm\">\n        <h4 className=\"title\">\n          Monte aqui o seu cardápio. O que está esperando?\n        </h4>\n        <Switch\n          opt1={opt1}\n          opt2={opt2}\n          onChange={handleChangeCheck(\"checked\")}\n          value={state.checked}\n        />\n      </div>\n      <Container flex fw percent=\"100\" className=\"bodyForm\">\n        <Container percent=\"40\">\n          <Input\n            type=\"text\"\n            placeholder=\"Título do pedido\"\n            defaultValue={\"\"}\n            value={titulo}\n            onChange={(e) => setTitulo(e.target.value)}\n            required\n          />\n        </Container>\n        <Container percent=\"40\">\n          <Input\n            type=\"text\"\n            placeholder=\"Sabor\"\n            defaultValue={\"\"}\n            value={sabor}\n            onChange={(e) => setSabor(e.target.value)}\n            required\n          />\n        </Container>\n        <Container percent=\"20\">\n          <Input\n            type=\"number\"\n            placeholder=\"R$\"\n            defaultValue={\"\"}\n            value={valor}\n            onChange={(e) => setValor(e.target.value)}\n            required\n          />\n        </Container>\n        <Container percent=\"100\">\n          <Input\n            type=\"textArea\"\n            placeholder=\"Descrição\"\n            row=\"4\"\n            defaultValue={\"\"}\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        </Container>\n        <Container percent=\"100\">\n          <Input\n            type=\"file\"\n            label=\"Jogue aqui o arquivo de imagem do seu pastel ou clique para localizar a pasta.\"\n            accept=\".jpeg,.jpg,.png\"\n            onChange={handleChangeImg()}\n            file={file.url}\n          />\n        </Container>\n      </Container>\n      <Container flex fw className=\"containerButtons\">\n        <Button onClick={limpaFormulario} colorSecundary className=\"button\">\n          Limpar\n        </Button>\n        <Button className=\"button\" type=\"submit\">\n          Cadastrar\n        </Button>\n      </Container>\n    </ContainerForm>\n  );\n};\n\nlet ContainerForm = styled(Container)`\n  border-radius: 20px;\n  background: ${colors.white};\n  position: relative;\n  box-shadow: 0px 0px 30px #740b0b45;\n  &::before {\n    content: \"\";\n    width: 291px;\n    background-image: url(/images/pasteis-img.png);\n    position: absolute;\n    height: 274px;\n    background-repeat: no-repeat;\n    top: 10%;\n    transform: translateY(-50%);\n    z-index: -1;\n    right: 0px;\n  }\n  .headerForm {\n    background: ${colors.yellow};\n    border-radius: 20px 20px 0px 0px;\n    color: ${colors.burgundy.default};\n    padding: 1.7rem 30px 1.7rem;\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    .title {\n      margin: 0;\n      text-transform: uppercase;\n      font-weight: 700;\n      font-style: italic;\n      font-size: 1.2em;\n    }\n  }\n  .bodyForm {\n    position: relative;\n    z-index: 1;\n    margin-top: -25px;\n  }\n  .containerButtons {\n    transform: translateY(50%);\n    justify-content: center;\n    .button {\n      margin: 0 15px;\n    }\n  }\n\n  @media (max-width: ${breakpoints.md}) {\n    .containerButtons {\n      transform: translateY(50%);\n      justify-content: center;\n      .button {\n        margin: 0 5px;\n      }\n    }\n  }\n\n  @media (max-width: ${breakpoints.lg}) {\n    .containerButtons {\n      display: flex;\n    }\n    .headerForm {\n      flex-direction: column;\n      align-items: center;\n      text-align: center;\n      .title {\n        margin: 0 0 15px;\n      }\n    }\n    &::before {\n      display: none;\n    }\n  }\n`;\n\nForm.propTypes = {\n  setBebidaData: PropTypes.func,\n  bebidaData: PropTypes.array,\n  setComidaData: PropTypes.func,\n  comidaData: PropTypes.array,\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"../../atoms/container\";\nimport colors from \"../../../styles/colors\";\nimport PropTypes from \"prop-types\";\n\nlet Tabs = (props) => {\n  const [state, setState] = useState({\n    activeIndex: props.defaultActiveIndex || 0,\n  });\n\n  const handleTabClick = (tabIndex) => {\n    setState({ activeIndex: tabIndex });\n  };\n\n  return (\n    <ContainerTabs percent=\"75\" tag=\"section\" className=\"tabs\">\n      <ul className=\"tabs-header\">\n        {props.children.map(function (item, i) {\n          const title = item.props.title;\n          let classActive = i === state.activeIndex ? \"active\" : \"off\";\n          return (\n            <li\n              key={i}\n              onClick={() => handleTabClick(i)}\n              className={`tabs-header-item ${classActive}`}\n            >\n              {title}\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"tabs-content\">\n        {props.children.map(function (item, i) {\n          if (i === state.activeIndex) {\n            return item;\n          } else {\n            return false;\n          }\n        })}\n      </div>\n    </ContainerTabs>\n  );\n};\n\nconst ContainerTabs = styled(Container)`\n  .tabs-header {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n  }\n  .tabs-header-item {\n    width: 100px;\n    text-align: center;\n    cursor: pointer;\n    margin: 0 10px;\n    padding: 10px 15px;\n    font-size: 1.1em;\n    color: ${colors.burgundy.default};\n  }\n  .tabs-header-item.active {\n    font-weight: 600;\n    color: ${colors.red};\n    border-bottom: 2px solid ${colors.red};\n  }\n  .noItens {\n    font-weight: 600;\n    font-style: italic;\n    text-align: center;\n    font-size: 1em;\n    color: ${colors.burgundy.default};\n  }\n`;\n\nTabs.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Tabs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Tab = (props) => {\n  return <ul className={props.className}>{props.children}</ul>;\n};\n\nTab.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Tab;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"../../atoms/container\";\nimport colors from \"../../../styles/colors\";\nimport PropTypes from \"prop-types\";\nimport breakpoints from \"../../../styles/breakpoints\";\n\nlet ItemLista = (props) => {\n  const item = props.item,\n    titulo = item.titulo,\n    imgUrl = item.img.url,\n    sabor = item.sabor,\n    valor = item._valor,\n    desc = item.desc;\n  return (\n    <ContainerForm tag=\"li\">\n      <div\n        className=\"imgContainer\"\n        style={{ backgroundImage: `url(${imgUrl})` }}\n      ></div>\n      <div className=\"contentContainer\">\n        <div className=\"header\">\n          <h6 className=\"title\">\"{titulo}\"</h6>\n          <p className=\"value\">R$ {valor}</p>\n        </div>\n        <div className=\"body\">\n          <p className=\"text-body\">\n            <b>Sabor:</b>\n            {sabor}\n          </p>\n          <p className=\"text-body\">\n            {desc ? (\n              <React.Fragment>\n                <b>Descrição:</b> {desc}\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <b>Descrição:</b> Dá um jeito, mas o cliente quer um {titulo}!\n              </React.Fragment>\n            )}\n          </p>\n        </div>\n      </div>\n    </ContainerForm>\n  );\n};\n\nlet ContainerForm = styled(Container)`\n  position: relative;\n  margin: 40px auto;\n  .imgContainer {\n    width: 140px;\n    height: 140px;\n    box-shadow: 0px 0px 30px #740b0b45;\n    border-radius: 10px;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: absolute;\n    z-index: 1;\n    left: 0;\n    top: 20px;\n  }\n  .contentContainer {\n    width: calc(100% - 100px);\n    border-radius: 20px;\n    background: ${colors.white};\n    box-shadow: 0px 0px 30px #740b0b45;\n    margin-left: 100px;\n    .header {\n      background: ${colors.red};\n      border-radius: 20px 20px 0px 0px;\n      padding: 1.7rem 60px 1.7rem;\n      position: relative;\n      display: flex;\n      justify-content: space-between;\n      .title {\n        color: ${colors.yellow};\n        margin: 0;\n        font-weight: 600;\n        font-style: italic;\n        font-size: 1.1em;\n      }\n      .value {\n        color: ${colors.white};\n        margin: 0;\n        font-weight: 600;\n        font-style: italic;\n        font-size: 1.1em;\n      }\n    }\n    .body {\n      border-radius: 0px 0px 20px 20px;\n      padding: 0.3rem 60px 1.7rem;\n      .text-body {\n        color: ${colors.burgundy.default};\n        font-size: 0.95em;\n        margin-bottom: 10px;\n      }\n    }\n  }\n  @media (max-width: ${breakpoints.md}) {\n    .contentContainer {\n      width: 100%;\n      margin-left: 0;\n      .header {\n        flex-direction: column;\n        text-align: center;\n        padding: 1.7rem 30px 1.7rem;\n        .title {\n          margin: 15px 0;\n        }\n      }\n      .body {\n        padding: 0.3rem 30px 1.7rem;\n      }\n    }\n    .imgContainer {\n      position: relative;\n      margin: 0 auto;\n    }\n  }\n`;\n\nItemLista.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default ItemLista;\n","import React, { useState } from \"react\";\nimport Container from \"../../atoms/container\";\nimport Form from \"../../molecule/form\";\nimport colors from \"../../../styles/colors\";\nimport styled from \"styled-components\";\nimport Tabs from \"../../molecule/tabs\";\nimport Tab from \"../../atoms/tab\";\nimport ItemLista from \"../../molecule/Item-lista\";\n\nlet Body = () => {\n  const [comidaData, setComidaData] = useState([]);\n  const [bebidaData, setBebidaData] = useState([]);\n  return (\n    <React.Fragment>\n      <Form\n        comidaData={comidaData}\n        bebidaData={bebidaData}\n        setBebidaData={setBebidaData}\n        setComidaData={setComidaData}\n      />\n      <ContainerTitle percent=\"100\">\n        <h5 className=\"title\">Veja como será apresentado ao cliente</h5>\n      </ContainerTitle>\n      <Tabs>\n        <Tab title={\"Comidas\"} className={\"tab-custom-class\"} index=\"0\">\n          {comidaData.length ? (\n            comidaData\n              .slice(0)\n              .reverse()\n              .map(function (item, i) {\n                return <ItemLista key={i} item={item} />;\n              })\n          ) : (\n            <li>\n              <p className=\"noItens\">Nenhuma comida cadastrada.</p>\n            </li>\n          )}\n        </Tab>\n        <Tab title={\"Bebidas\"} className={\"tab-custom-class\"} index=\"1\">\n          {bebidaData.length ? (\n            bebidaData\n              .slice(0)\n              .reverse()\n              .map(function (item, i) {\n                return <ItemLista key={i} item={item} />;\n              })\n          ) : (\n            <li>\n              <p className=\"noItens\">Nenhuma bebida cadastrada.</p>\n            </li>\n          )}\n        </Tab>\n      </Tabs>\n    </React.Fragment>\n  );\n};\n\nlet ContainerTitle = styled(Container)`\n  text-align: center;\n  margin: 40px auto;\n  position: relative;\n  :after {\n    content: \"\";\n    border-top: 1px solid ${colors.burgundy.default};\n    width: 100%;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    z-index: 0;\n  }\n  .title {\n    color: ${colors.burgundy.default};\n    padding: 15px 10px;\n    background: ${colors.white};\n    font-size: 19px;\n    display: block;\n    margin: 0 auto;\n    width: 30%;\n    min-width: 270px;\n    position: relative;\n    z-index: 1;\n  }\n`;\n\nexport default Body;\n","import React from \"react\";\nimport MainTheme from \"../../templates/main-theme\";\nimport Header from \"../../organisms/header\";\nimport Body from \"../../organisms/body\";\n\nlet App = () => {\n  return (\n    <MainTheme>\n      <Header></Header>\n      <Body></Body>\n    </MainTheme>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/pages/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}